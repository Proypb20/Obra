
entity Obra {
	name String required,
    address String,
    city String,
    initialDate LocalDate required,
    endDate LocalDate required
}

entity Proveedor {
	name String required,
    address String,
    city String,
    phone String,
    email String
}

entity Provincia {
    name String required
}

entity Subcontratista {
	lastName String required,
    firstName String required,
    phone String,
    email String
}

entity Acopio {
   date LocalDate,
   totalAmount Long
}

entity UnidadMedida {
   name String required
}

entity Tarea {
   name String required,
   quantity Long,
   cost Long,
   advanceStatus Long max(100)
}

enum Estado {
   Pendiente, Entregado
}

entity TipoComprobante {
   name String required
}

entity DetalleAcopio {
	date LocalDate,
    description String,
	quantity Long required,
    unitPrice Long required,
    amount Long required,
    requestDate LocalDate required,
    promiseDate LocalDate,
    deliveryStatus Estado
}

entity Concepto {
    name String required
}

enum MetodoPago {
  Efectivo, Banco
}

entity Transaccion {
   date LocalDate,
   paymentMethod MetodoPago,
   transactionNumber String,
   amount Long,
   note String
}

relationship ManyToMany {
    Subcontratista{obra(name)} to Obra{subcontratista}
}

relationship ManyToOne {
    Acopio{obra(name)} to Obra
    Acopio{proveedor(name)} to Proveedor
    DetalleAcopio{acopio} to Acopio
    Tarea{unidadMedida(name)} to UnidadMedida
    Tarea{obra(name)} to Obra
    Tarea{subcontratista(LastName)} to Subcontratista
    Tarea{concepto(name)} to Concepto
	Transaccion{obra(name)} to Obra
	Transaccion{subcontratista(LastName)} to Subcontratista
	Transaccion{tipoComprobante(name)} to TipoComprobante
	Obra{provincia(name)} to Provincia
	Proveedor{provincia(name)} to Provincia
}

// Use Data Transfer Objects (DTO)
 dto * with mapstruct

filter all

// Set service options to all except few
service all with serviceClass



